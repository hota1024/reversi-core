色を扱う
Color
ベクタ
Vec2
石
Tile
プレイヤー
Player
入力
InputProvider
ターン（手番）
Turn
盤面
Board
ゲーム
Reversi

@startuml
namespace RversiCore {
  class Color {
    - Number _color
    + void flip()
    + Color flipped()
    + static Number White
    + static Number Black
    + static Number Empty
    + static Number Wall
  }

  class Vec2 {
    + Number x
    + Number y
    + Vec2 moveBy(Vec2 vec)
    + Vec2 movedBy(Vec2 vec)
  }

  class Tile {
    + Color color
    + void flip()
    + Tile flipped()
  }
  Tile -> RversiCore.Color

  interface IInputProvider {
    + Boolean getPut()
  }

  class Player {
    - Color _color
    - IInputProvider input
    + Color get color
    + void setInputProvider(IInputProvider input)
  }
  Plyaer -> RversiCore.Color
  Plyaer -> RversiCore.IInputProvider

  class Turn {
    - Player _player
    + get Player player
  }
  Turn -> RversiCore.Player

  class Board {
    - Array<Tile> tiles
    + Tile getTile(Vec2 pos)
    + Boolean run(Vec2 start, Color color, Boolean flip)
    + Boolean runAngle(Vec2 start, Vec2 angle, Color color, Boolean flip)
    + Boolean put(Vec2 pos, Color color)
  }
  Board -> RversiCore.Title
  Board -> RversiCore.Tile

  class Reversi {
    - Turn _turn
    - Player _player1
    - Player _player2
    + get player1
    + get player2
    + get turn
  }
  Reversi -> RversiCore.Turn
  Reversi -> RversiCore.Player

  interface IOutputProvider {
    + void output(Reversi reversi)
  }
}

namespace ExampleBiscoBot {
  class BiscoInputProvider
  BiscoInputProvider --|> ReversiCore.IInputProvider
}
@enduml